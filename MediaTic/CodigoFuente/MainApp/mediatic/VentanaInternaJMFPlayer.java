/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mediatic;

import java.awt.Component;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.media.Buffer;
import javax.media.Manager;
import javax.media.MediaLocator;
import javax.media.Player;
import javax.media.control.FrameGrabbingControl;
import javax.media.format.VideoFormat;
import javax.media.util.BufferToImage;

/**
 * Clase que hereda de VentanaInterna para la reproducción y 
 * visualización de un vídeo en un JInternalFrame (Decaprecated).
 * @author Víctor Padilla
 */
public class VentanaInternaJMFPlayer extends VentanaInterna {
    
    private Player player = null;
    
    public VentanaInternaJMFPlayer(VentanaPrincipal p) {
        super(p);
    }
    
    private VentanaInternaJMFPlayer(VentanaPrincipal p, File f) {
        super(p);
        
        initComponents();
        
        String sfichero = "file:" + f.getAbsolutePath();
        
        MediaLocator ml = new MediaLocator(sfichero);
        
        try {
            player = Manager.createRealizedPlayer(ml);
            
            Component vc = player.getVisualComponent();
            
            if(vc!=null)add(vc, java.awt.BorderLayout.CENTER);
            
            Component cpc = player.getControlPanelComponent();
            
            if(cpc!=null)add(cpc, java.awt.BorderLayout.SOUTH);
           
            this.pack();
        }catch(Exception e) {
            System.err.println("VentanaInternaJMFPlayer: "+e);

            player = null;
        }
    }
    
    public static VentanaInternaJMFPlayer getInstance(VentanaPrincipal p, File f){
        VentanaInternaJMFPlayer v = new VentanaInternaJMFPlayer(p, f);
        
        return (v.player!=null?v:null);
    }
    
    public void play() {
        if (player != null) {
            try {
                player.start();
            } catch (Exception e) {
                System.err.println("VentanaInternaJMFPlayer: "+e);
            }
        }
    }
    
    public void stop() {
        if (player != null) {
            try {
                player.stop();
            } catch (Exception e) {
                System.err.println("VentanaInternaJMFPlayer: "+e);
            }
        }
    }
    
    public void close() {
        if (player != null) {
            try {
                player.close();
            } catch (Exception e) {
                System.err.println("VentanaInternaJMFPlayer: "+e);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setClosable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        this.close();
    }//GEN-LAST:event_formInternalFrameClosing

    public BufferedImage getFrame(){
        if(player != null){ 
           FrameGrabbingControl fgc;

            String claseCtr = "javax.media.control.FrameGrabbingControl";

            fgc = (FrameGrabbingControl)player.getControl(claseCtr);

            Buffer bufferFrame = fgc.grabFrame();
            BufferToImage bti;

            bti=new BufferToImage((VideoFormat)bufferFrame.getFormat());

            Image img = bti.createImage(bufferFrame);

            return (BufferedImage)img;
        }
        
        return null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
