/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package paint;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author gh-ro
 */
public class Lienzo extends javax.swing.JPanel {
    private Point punto_ini = new Point(), 
                  punto_fin = new Point();
    private String herramienta = new String();
    private boolean relleno = false;
    private Color colorH = Color.BLACK;
 
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {
        initComponents();
    }
    
    protected void setHerramienta(String herr){
        herramienta = new String(herr);   
    }
    
    protected void setRelleno(boolean rell){
        relleno = rell;
    }
    
    protected void setColor(Color c){
        colorH = c;
    }
    
    protected void limpiar(){
        this.setHerramienta("borrar");
        
        repaint();
    }
    
    public void paint(Graphics g){
        super.paint(g);
               
        g.setColor(colorH);
        
        Point max = new Point(), 
              min = new Point();
        
        max.x = Math.max(punto_ini.x, punto_fin.x);
        max.y = Math.max(punto_ini.y, punto_fin.y);
        
        min.x = Math.min(punto_ini.x, punto_fin.x);
        min.y = Math.min(punto_ini.y, punto_fin.y);
        
        switch(herramienta){
            case "punto":
                g.fillOval((int)punto_ini.getX()-10,(int)punto_ini.getY()-10,20,20);
                break;
            case "recta":
                g.drawLine((int)punto_ini.getX(),(int)punto_ini.getY(), (int)punto_fin.getX(),(int)punto_fin.getY());
                break;
            case "ovalo":
                if(relleno)
                    g.fillOval((int)min.getX(),(int)min.getY(), (int)max.getX()-(int)min.getX(),(int)max.getY()-(int)min.getY());
                else
                    g.drawOval((int)min.getX(),(int)min.getY(), (int)max.getX()-(int)min.getX(),(int)max.getY()-(int)min.getY());
                break;
            case "rectangulo":
                if(relleno)
                    g.fillRect((int)min.getX(),(int)min.getY(), (int)max.getX()-(int)min.getX(),(int)max.getY()-(int)min.getY());
                else
                    g.drawRect((int)min.getX(),(int)min.getY(), (int)max.getX()-(int)min.getX(),(int)max.getY()-(int)min.getY());
                break;
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        punto_ini = evt.getPoint();
               
        this.repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        punto_ini = evt.getPoint();   
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        punto_fin = evt.getPoint();
        
        this.repaint();
    }//GEN-LAST:event_formMouseReleased

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        punto_fin = evt.getPoint();
               
        this.repaint();
    }//GEN-LAST:event_formMouseDragged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
